@model IEnumerable<HumanResources.Domain.Entities.EmployeeEntity>

@{
    ViewBag.Title = "Employees";
}

<div class="row">
    <div class="col-md-12">
        <h2>Employees</h2>
        <hr>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-2">
        @Html.ActionLink("New...", "Update", new {id = 0}, new {@class = "btn btn-success"})
    </div>
</div>

<div class="row mt-4">
    <div class="offset-md-1"></div>
    <div class="col-md-10">
        <table class="table table-bordered table-hover">
            <tr class="thead-light">
                <th>First Name</th>
                <th>Last Name</th>
                <th>Birthday</th>
                <th>INN</th>
                <th>Actions</th>
            </tr>
            @foreach (var item in Model)
            {
                <tr id="tr-@item.EmployeeId">
                    <td class="text-capitalize pt-3">
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td class="text-capitalize pt-3">
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td class="pt-3">
                        @Html.DisplayFor(modelItem => item.DateBirthday.Month)/@Html.DisplayFor(modelItem => item.DateBirthday.Day)/@Html.DisplayFor(modelItem => item.DateBirthday.Year)
                    </td>
                    <td class="pt-3">
                        @Html.DisplayFor(modelItem => item.Inn)
                    </td>
                    <td>
                        @Html.ActionLink("Edit...", "Update", new {id = item.EmployeeId}, new {@class = "btn btn-secondary", data_id = item.EmployeeId})
                        @Html.ActionLink("Delete", "Delete", new {id = item.EmployeeId}, new {@class = "btn btn-outline-danger btn-cmd-delete", data_id = item.EmployeeId})
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="offset-md-1"></div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script>
        'use strict';

        function askToDelete(item) {
            return Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then(async (result) => {
                if (result.value) {
                    if (!await requestDelete(item.dataset.id)) {
                        return;
                    }
                    item.parentNode.parentNode.remove();
                }
            });
        }

        async function requestDelete(id) {
            return await fetch(new Request(`/Employee/Delete/${id}`),
                {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                }).then(
                function(response) {
                    if (response.status === 200) {
                        successDelete();
                        return true;
                    }
                });

            function successDelete() {
                Swal.fire(
                    'Deleted.',
                    'Employee successfully removed.',
                    'success'
                );
            }
        }

        function test() {
            document.querySelectorAll('.btn-cmd-delete').forEach(e => {
                e.addEventListener('click',
                    function(event) {
                        event.preventDefault();
                        askToDelete(e);
                    });
            });
        }

        test();
    </script>
}